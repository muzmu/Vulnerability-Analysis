"""
Generate a mitmproxy dump file.

This script demonstrates how to generate a mitmproxy dump file,
as it would also be generated by passing `-w` to mitmproxy.
In contrast to `-w`, this gives you full control over which
flows should be saved and also allows you to rotate files or log
to multiple files in parallel.
"""
import random
import sys
from mitmproxy import io, http
import typing  # noqa

import os
import sys

from mitmproxy import http
# from mitmproxy.master import Master
import mitmproxy.master as master
from mitmproxy.addons import core
from mitmproxy.proxy import ProxyConfig, ProxyServer
from mitmproxy.options import Options
from mitmproxy import io, http

class Writer(master.Master, http.HTTPFlow):
    def __init__(self, options, server, file_path):
        master.Master.__init__(self, options)
        self.server = server
        self.file_path = file_path
        self.f = open(self.file_path, 'wb+')
        self.w = io.FlowWriter(self.f)

    def run(self):
        try:
            master.Master.run(self)
        except KeyboardInterrupt:
            self.shutdown()
            sys.exit(0)
    
    def writestuff(self):
        flo = http.HTTPFlow
        print(flo)
        self.w.add(flo)

class Writer:
    def __init__(self, path: str) -> None:
        self.f: typing.IO[bytes] = open(path, "wb")
        self.w = io.FlowWriter(self.f)

    def response(self, flow: http.HTTPFlow) -> None:
        if random.choice([True, False]):
            self.w.add(flow)

    def done(self):
        self.f.close()


addons = [Writer(sys.argv[1])]
