import geopy
import geopy.distance

import geopy

# given: lat1, lon1, b = bearing in degrees, d = distance in kilometers
# Source : Jyotsna's house

lat1 = 42.336487736649254
lon1 = -71.12138402750078

# TO DO: get the distance from the response
d = 3.21869
origin = geopy.Point(lat1, lon1)
list1 = []

for i in range(0,360):
    b = i
    destination = geopy.distance.distance(kilometers=d).destination(origin, b)
    list1.append(destination)
    #coord = destination.latitude, destination.longitude 

lat1 = list1[129].latitude
lon1 = list1[129].longitude
# TO DO: change the location request
print(lat1,lon1)

# TO DO: get the distance from the response
d = 6.43738
origin = geopy.Point(lat1, lon1)
list2 = []

for i in range(0,360):
    b = i
    destination = geopy.distance.distance(kilometers=d).destination(origin, b)
    list2.append(destination)

min1 = 99999999999
closest_point1 = {}
min2 = 99999999999
closest_point2 = {}
for l1 in list1:
    for l2 in list2:
        dist = geopy.distance.geodesic(l1,l2).km
        if(dist < min1):
            min2 = min1
            closest_point2=closest_point1
            min1 = dist
            closest_point1=l2
        elif(dist < min2):
            min2 = dist
            closest_point2=l2
        
print(min1,min2)
print(closest_point1.latitude, closest_point1.longitude)
print(closest_point2.latitude, closest_point2.longitude)


# #Find distance for both locations and pick the smaller one

# Change d and next origin here
d=1.60934
next_origin = closest_point1
previous_circle = list2
lat1 = next_origin.latitude
lon1 = next_origin.longitude
new_circle = []

while (d>0.5):

    origin = geopy.Point(lat1, lon1)
    for i in range(0,360):
        b = i
        destination = geopy.distance.distance(kilometers=d).destination(next_origin, b)
        new_circle.append(destination)
    
    min1 = 99999999999
    closest_point1 = {}
    min2 = 99999999999
    closest_point2 = {}
    for l1 in previous_circle:
        for l2 in new_circle:
            dist = geopy.distance.geodesic(l1,l2).km
            if(dist < min1):
                min2 = min1
                closest_point2=closest_point1
                min1 = dist
                closest_point1=l2
            elif(dist < min2):
                min2 = dist
                closest_point2=l2

    #Find distance for both locations and pick the smaller one
    # Change d and next origin here
    d = 0.5
    print(min1,min2)
    print(closest_point1.latitude, closest_point1.longitude)
    print(closest_point2.latitude, closest_point2.longitude)

    next_origin = closest_point1
    previous_circle = new_circle
    lat1 = next_origin.latitude
    lon1 = next_origin.longitude
    new_circle = []


#Draw 9 circles
origin = geopy.Point(lat1, lon1)
final_points = []
for i in range(0,8):
        b = i * 45
        previous_d = d
        while(d==0.5):
            destination = geopy.distance.distance(kilometers=d).destination(next_origin, b)
            previous_d = d
            # calculate distance here
            if(d>0.5)
                final_points.append(destination)

# import numpy as np
# import json
# import geog
# import shapely.geometry
# p = shapely.geometry.Point([42.35303958185774, -71.15324850205559])
# n_points = 360
# d = 1609.34  # meters
# angles = np.linspace(0, 360, n_points)
# circle = geog.propagate(p, angles, d)
# print(json.dumps(shapely.geometry.mapping(shapely.geometry.Polygon(circle))))